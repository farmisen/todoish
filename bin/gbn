#!/usr/bin/env bash
set -euo pipefail

# Script to get branch name for a Linear ticket
# Usage: ./get-branch-name <ticket-id>

# Colors for output (only if running in terminal)
if [ -t 1 ]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    NC='\033[0m' # No Color
else
    RED=''
    GREEN=''
    YELLOW=''
    NC=''
fi

# Functions
print_error() {
    echo -e "${RED}Error: $1${NC}" >&2
}

print_info() {
    [ -t 1 ] && echo -e "${YELLOW}→ $1${NC}" >&2
}

validate_ticket_id() {
    local ticket_id="$1"
    if [[ ! "$ticket_id" =~ ^ROY-[0-9]+$ ]]; then
        print_error "Invalid ticket ID format. Expected format: ROY-123"
        return 1
    fi
    return 0
}

get_ticket_slug() {
    local ticket_id="$1"
    echo "${ticket_id,,}" # Convert to lowercase
}

slugify_title() {
    local title="$1"
    # Convert to lowercase, replace non-alphanumeric chars with hyphens
    # Remove multiple consecutive hyphens and trim leading/trailing hyphens
    echo "$title" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/-\+/-/g' | sed 's/^-\|-$//g'
}

check_linear_cli_available() {
    if ! command -v linear &> /dev/null; then
        print_error "Linear CLI not found. Please install it first."
        print_error "Install with: npm install -g @egcli/lr"
        print_error "Then run: linear init"
        return 1
    fi
    return 0
}

get_branch_name_from_linear() {
    local ticket_id="$1"
    
    # Get issue details from Linear CLI
    local issue_output
    issue_output=$(linear issue "$ticket_id" 2>&1)
    
    if [ $? -ne 0 ]; then
        print_error "Failed to fetch issue from Linear"
        print_error "Error: $issue_output"
        return 1
    fi
    
    # Extract the title from the output (second line after ticket ID)
    # Remove box drawing characters and trim whitespace
    local title
    title=$(echo "$issue_output" | grep -A1 "$ticket_id" | tail -n1 | sed 's/│//g' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
    
    if [ -z "$title" ]; then
        print_error "Could not extract title from Linear issue"
        return 1
    fi
    
    print_info "Found issue title: $title"
    
    # Generate branch name
    local ticket_slug
    ticket_slug=$(get_ticket_slug "$ticket_id")
    
    local title_slug
    title_slug=$(slugify_title "$title")
    
    # Construct branch name
    local branch_name="farmisen/${ticket_slug}-${title_slug}"
    
    # Ensure branch name isn't too long (git has limits)
    if [ ${#branch_name} -gt 100 ]; then
        # Truncate the title part if too long
        local max_title_length=$((100 - ${#ticket_slug} - 10)) # 10 for "farmisen/" and "-"
        title_slug="${title_slug:0:$max_title_length}"
        branch_name="farmisen/${ticket_slug}-${title_slug}"
    fi
    
    echo "$branch_name"
}

# Main
main() {
    # Check if ticket ID is provided
    if [ $# -eq 0 ]; then
        print_error "No ticket ID provided"
        echo "Usage: $0 <ticket-id>"
        echo "Example: $0 ROY-123"
        exit 1
    fi

    local ticket_id="$1"
    
    # Validate ticket ID
    if ! validate_ticket_id "$ticket_id"; then
        exit 1
    fi

    # Check if Linear CLI is available
    if ! check_linear_cli_available; then
        exit 1
    fi

    # Get and output the branch name
    local branch_name
    branch_name=$(get_branch_name_from_linear "$ticket_id")
    
    if [ $? -ne 0 ] || [ -z "$branch_name" ]; then
        exit 1
    fi
    
    # Output only the branch name (no logging)
    echo "$branch_name"
}

# Run main function
main "$@"